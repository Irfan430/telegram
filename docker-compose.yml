version: '3.8'

services:
  bot:
    build: .
    ports:
      - "3000:3000"
      - "9090:9090"
    environment:
      - NODE_ENV=development
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/hypergiga_bot
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=debug
      - LOG_PRETTY=true
      - FEATURE_TRACING=false
      - QUOTAS_DEFAULT={"daily_commands":1000,"daily_downloads":50,"daily_ai_requests":100,"daily_media_conversions":20}
      - RATE_LIMIT_GLOBAL=1000
      - RATE_LIMIT_PER_USER=100
      - RATE_LIMIT_PER_COMMAND=10
      - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
      - PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium
      - FFMPEG_PATH=/usr/bin/ffmpeg
      - JWT_SECRET=development-jwt-secret-32-chars-long-key
      - ENCRYPTION_KEY=development-encryption-key-32-chars
      - MAX_FILE_SIZE=52428800
      - MAX_IMAGE_SIZE=10485760
      - MAX_VIDEO_SIZE=104857600
      - CACHE_TTL=3600
      - CACHE_MAX_SIZE=1000
      - METRICS_PORT=9090
      - HEALTH_CHECK_INTERVAL=30000
      - DEBUG=true
      - ENABLE_SWAGGER=false
    depends_on:
      - postgres
      - redis
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=hypergiga_bot
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Optional: Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data: